#!/usr/bin/env bash

homebrew() {
  echo 'To install Homebrew:'
  echo '  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'

  echo
  echo 'To install formulas and casks:'
  echo '  brew tap Homebrew/bundle'
  echo '  brew bundle'
}

symlink() {
  echo "Symlinking files and folders"
  _symlink 'emacs.d'
  _symlink 'git/gitconfig'
  _symlink 'git/gitignore'
  _symlink 'lein'
  _symlink 'ruby/gemrc'
  _symlink 'ruby/rspec'
  _symlink 'tmux/tmux.conf'
  _symlink 'zsh/zshenv'
  _symlink 'zsh/zshrc'

  mkdir -p ~/.config
  ln -nfs "$PWD/nvim" ~/.config/nvim
}

plug() {
  echo "Installing vim-plug for NeoVim"
  read -p "Did you remember to install NeoVim and symlink first? " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]
  then
    curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  fi
}

change_shell() {
  echo "Changin shell to Zsh"
  sudo bash -c "echo '/usr/local/bin/zsh' >> /etc/shells"
  chsh -s /usr/local/bin/zsh &> /dev/null
  echo "Changed shell"
}

# Private functions
_symlink() {
  source="$PWD/$1"
  target="$HOME/.$(basename $1)"

  # -e  existence
  # -L  symbolic link
  if [ -e "$target" ] && [ ! -L "$target" ]; then
    mv "$target" "$target.backup"
  fi

  ln -nfs "$source" "$target"
}

if [ "$#" -eq 0 ] || [ "$1" == "-h" ]; then
  cat <<HELP
Usage:
  homebrew     -- Instructions for installing Homebrew and packages
  plug         -- Installing vim-plug for NeoVim
  symlink      -- Symlink dotfiles to \$HOME
  change_shell -- Changes shell to Zsh
HELP
else
  # Poor man's task runner
  "$@"
fi
